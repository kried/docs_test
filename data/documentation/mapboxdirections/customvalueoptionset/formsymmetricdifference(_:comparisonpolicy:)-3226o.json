{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/CustomValueOptionSet\/formSymmetricDifference(_:comparisonPolicy:)-3226o"},"sections":[],"abstract":[{"text":"Removes the elements of the set that are also in the given set and adds","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the members of the given set that are not already in the set."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"formSymmetricDifference","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"other"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:s10SetAlgebraP7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"comparisonPolicy","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CustomOptionComparisonPolicy","preciseIdentifier":"s:16MapboxDirections28CustomOptionComparisonPolicyO","identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/CustomOptionComparisonPolicy","kind":"typeIdentifier"},{"text":")","kind":"text"}],"platforms":["iOS"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A set of the same type.","type":"text"}]}],"name":"other"},{"name":"comparisonPolicy","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"comparison method to be used for "},{"type":"codeVoice","code":"customOptionsByRawValue"},{"type":"text","text":"."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"In the following example, the elements of the ","type":"text"},{"type":"codeVoice","code":"employees"},{"type":"text","text":" set that are"},{"text":" ","type":"text"},{"type":"text","text":"also members of "},{"type":"codeVoice","code":"neighbors"},{"type":"text","text":" are removed from "},{"code":"employees","type":"codeVoice"},{"type":"text","text":", while the"},{"text":" ","type":"text"},{"type":"text","text":"elements of "},{"type":"codeVoice","code":"neighbors"},{"type":"text","text":" that are not members of "},{"type":"codeVoice","code":"employees"},{"type":"text","text":" are added to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"employees"},{"text":". In particular, the names ","type":"text"},{"code":"\"Bethany\"","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"\"Eric\""},{"text":" are","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"removed from "},{"code":"employees","type":"codeVoice"},{"type":"text","text":" while the name "},{"code":"\"Forlani\"","type":"codeVoice"},{"text":" is added.","type":"text"}]},{"type":"codeListing","syntax":null,"code":["var employees: Set = [\"Alicia\", \"Bethany\", \"Diana\", \"Eric\"]","let neighbors: Set = [\"Bethany\", \"Eric\", \"Forlani\"]","employees.formSymmetricDifference(neighbors)","print(employees)","\/\/ Prints \"[\"Diana\", \"Forlani\", \"Alicia\"]\""]}]}],"hierarchy":{"paths":[["doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections","doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/CustomValueOptionSet","doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/CustomValueOptionSet\/formSymmetricDifference(_:comparisonPolicy:)-6hle3"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mapboxdirections\/customvalueoptionset\/formsymmetricdifference(_:comparisonpolicy:)-3226o"]}],"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"role":"symbol","extendedModule":"MapboxDirections","symbolKind":"method","title":"formSymmetricDifference(_:comparisonPolicy:)","externalID":"s:16MapboxDirections20CustomValueOptionSetPAAE23formSymmetricDifference_16comparisonPolicyyx_AA0ce10ComparisonK0OtF","roleHeading":"Instance Method","modules":[{"name":"MapboxDirections"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"formSymmetricDifference"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:s10SetAlgebraP7ElementQa"},{"kind":"text","text":", "},{"kind":"externalParam","text":"comparisonPolicy"},{"text":": ","kind":"text"},{"text":"CustomOptionComparisonPolicy","kind":"typeIdentifier","preciseIdentifier":"s:16MapboxDirections28CustomOptionComparisonPolicyO"},{"text":")","kind":"text"}]},"references":{"doc://com.mapbox.navigation/documentation/MapboxDirections/CustomValueOptionSet":{"title":"CustomValueOptionSet","abstract":[{"text":"Option set implementation which allows each option to have custom string value attached.","type":"text"}],"identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/CustomValueOptionSet","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CustomValueOptionSet","kind":"identifier"}],"navigatorTitle":[{"text":"CustomValueOptionSet","kind":"identifier"}],"type":"topic","kind":"symbol","url":"\/documentation\/mapboxdirections\/customvalueoptionset"},"https://docs.mapbox.com/api/navigation/matrix/":{"type":"link","url":"https:\/\/docs.mapbox.com\/api\/navigation\/matrix\/","identifier":"https:\/\/docs.mapbox.com\/api\/navigation\/matrix\/","titleInlineContent":[{"type":"text","text":"Mapbox Matrix API"}],"title":"Mapbox Matrix API"},"https://docs.mapbox.com/api/navigation/directions/":{"title":"Mapbox Directions API","url":"https:\/\/docs.mapbox.com\/api\/navigation\/directions\/","identifier":"https:\/\/docs.mapbox.com\/api\/navigation\/directions\/","type":"link","titleInlineContent":[{"text":"Mapbox Directions API","type":"text"}]},"doc://com.mapbox.navigation/documentation/MapboxDirections":{"identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections","abstract":[{"type":"text","text":"Provides basic models for "},{"isActive":true,"type":"reference","identifier":"https:\/\/docs.mapbox.com\/api\/navigation\/directions\/"},{"type":"text","text":", "},{"type":"reference","identifier":"https:\/\/docs.mapbox.com\/api\/navigation\/map-matching\/","isActive":true},{"text":", and ","type":"text"},{"type":"reference","identifier":"https:\/\/docs.mapbox.com\/api\/navigation\/matrix\/","isActive":true},{"type":"text","text":"."}],"type":"topic","role":"collection","url":"\/documentation\/mapboxdirections","kind":"symbol","title":"MapboxDirections"},"doc://com.mapbox.navigation/documentation/MapboxDirections/CustomValueOptionSet/formSymmetricDifference(_:comparisonPolicy:)-3226o":{"abstract":[{"text":"Removes the elements of the set that are also in the given set and adds","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the members of the given set that are not already in the set."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"formSymmetricDifference","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:s10SetAlgebraP7ElementQa"},{"text":", ","kind":"text"},{"text":"comparisonPolicy","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:16MapboxDirections28CustomOptionComparisonPolicyO","kind":"typeIdentifier","text":"CustomOptionComparisonPolicy"},{"kind":"text","text":")"}],"url":"\/documentation\/mapboxdirections\/customvalueoptionset\/formsymmetricdifference(_:comparisonpolicy:)-3226o","role":"symbol","kind":"symbol","title":"formSymmetricDifference(_:comparisonPolicy:)","type":"topic","identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/CustomValueOptionSet\/formSymmetricDifference(_:comparisonPolicy:)-3226o"},"doc://com.mapbox.navigation/documentation/MapboxDirections/CustomValueOptionSet/formSymmetricDifference(_:comparisonPolicy:)-6hle3":{"identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/CustomValueOptionSet\/formSymmetricDifference(_:comparisonPolicy:)-6hle3","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"formSymmetricDifference"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:s10SetAlgebraP7ElementQa"},{"kind":"text","text":", "},{"kind":"externalParam","text":"comparisonPolicy"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:16MapboxDirections28CustomOptionComparisonPolicyO","text":"CustomOptionComparisonPolicy"},{"text":")","kind":"text"}],"role":"symbol","defaultImplementations":1,"required":true,"kind":"symbol","abstract":[{"text":"Removes the elements of the set that are also in the given set and adds","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the members of the given set that are not already in the set."}],"title":"formSymmetricDifference(_:comparisonPolicy:)","url":"\/documentation\/mapboxdirections\/customvalueoptionset\/formsymmetricdifference(_:comparisonpolicy:)-6hle3"},"https://docs.mapbox.com/api/navigation/map-matching/":{"type":"link","url":"https:\/\/docs.mapbox.com\/api\/navigation\/map-matching\/","identifier":"https:\/\/docs.mapbox.com\/api\/navigation\/map-matching\/","titleInlineContent":[{"type":"text","text":"Mapbox Map Matching API"}],"title":"Mapbox Map Matching API"},"doc://com.mapbox.navigation/documentation/MapboxDirections/CustomOptionComparisonPolicy":{"identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/CustomOptionComparisonPolicy","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CustomOptionComparisonPolicy"}],"type":"topic","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CustomOptionComparisonPolicy"}],"url":"\/documentation\/mapboxdirections\/customoptioncomparisonpolicy","title":"CustomOptionComparisonPolicy","abstract":[{"type":"text","text":"Describes how "},{"code":"customOptionsByRawValue","type":"codeVoice"},{"text":" component is compared during logical operations in ","type":"text"},{"type":"codeVoice","code":"CustomValueOptionSet"},{"text":".","type":"text"}]}}}